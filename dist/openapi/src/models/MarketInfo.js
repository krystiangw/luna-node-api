"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Luno API
 * The Luno API provides developers with a wealth of financial information provided through the Luno platform.  Through this secure system developers can:  <ul>    <li>Create accounts for trading in cryptocurrencies</li>    <li>Access current and historic cryptocurrency market data</li>    <li>Submit trade orders and view order status</li>    <li>Buy and sell Bitcoin and Ethereum</li>    <li>Send and receive Bitcoin and Ethereum</li>    <li>Generate Bitcoin and Ethereum wallet addresses</li>  </ul>   The Luno API brings the world of Bitcoin and Ethereum to your doorstep.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.MarketInfoToJSON = exports.MarketInfoFromJSONTyped = exports.MarketInfoFromJSON = exports.instanceOfMarketInfo = exports.MarketInfoTradingStatusEnum = void 0;
const runtime_1 = require("../runtime");
/**
 * @export
 */
exports.MarketInfoTradingStatusEnum = {
    PostOnly: 'POST_ONLY',
    Active: 'ACTIVE',
    Suspended: 'SUSPENDED'
};
/**
 * Check if a given object implements the MarketInfo interface.
 */
function instanceOfMarketInfo(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfMarketInfo = instanceOfMarketInfo;
function MarketInfoFromJSON(json) {
    return MarketInfoFromJSONTyped(json, false);
}
exports.MarketInfoFromJSON = MarketInfoFromJSON;
function MarketInfoFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'baseCurrency': !(0, runtime_1.exists)(json, 'base_currency') ? undefined : json['base_currency'],
        'counterCurrency': !(0, runtime_1.exists)(json, 'counter_currency') ? undefined : json['counter_currency'],
        'feeScale': !(0, runtime_1.exists)(json, 'fee_scale') ? undefined : json['fee_scale'],
        'marketId': !(0, runtime_1.exists)(json, 'market_id') ? undefined : json['market_id'],
        'maxPrice': !(0, runtime_1.exists)(json, 'max_price') ? undefined : json['max_price'],
        'maxVolume': !(0, runtime_1.exists)(json, 'max_volume') ? undefined : json['max_volume'],
        'minPrice': !(0, runtime_1.exists)(json, 'min_price') ? undefined : json['min_price'],
        'minVolume': !(0, runtime_1.exists)(json, 'min_volume') ? undefined : json['min_volume'],
        'priceScale': !(0, runtime_1.exists)(json, 'price_scale') ? undefined : json['price_scale'],
        'tradingStatus': !(0, runtime_1.exists)(json, 'trading_status') ? undefined : json['trading_status'],
        'volumeScale': !(0, runtime_1.exists)(json, 'volume_scale') ? undefined : json['volume_scale'],
    };
}
exports.MarketInfoFromJSONTyped = MarketInfoFromJSONTyped;
function MarketInfoToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'base_currency': value.baseCurrency,
        'counter_currency': value.counterCurrency,
        'fee_scale': value.feeScale,
        'market_id': value.marketId,
        'max_price': value.maxPrice,
        'max_volume': value.maxVolume,
        'min_price': value.minPrice,
        'min_volume': value.minVolume,
        'price_scale': value.priceScale,
        'trading_status': value.tradingStatus,
        'volume_scale': value.volumeScale,
    };
}
exports.MarketInfoToJSON = MarketInfoToJSON;
//# sourceMappingURL=MarketInfo.js.map