/**
 * Luno API
 * The Luno API provides developers with a wealth of financial information provided through the Luno platform.  Through this secure system developers can:  <ul>    <li>Create accounts for trading in cryptocurrencies</li>    <li>Access current and historic cryptocurrency market data</li>    <li>Submit trade orders and view order status</li>    <li>Buy and sell Bitcoin and Ethereum</li>    <li>Send and receive Bitcoin and Ethereum</li>    <li>Generate Bitcoin and Ethereum wallet addresses</li>  </ul>   The Luno API brings the world of Bitcoin and Ethereum to your doorstep.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * MarketInfo current market information
 * @export
 * @interface MarketInfo
 */
export interface MarketInfo {
    /**
     * Base currency code
     * @type {string}
     * @memberof MarketInfo
     */
    baseCurrency?: string;
    /**
     * Counter currency code
     * @type {string}
     * @memberof MarketInfo
     */
    counterCurrency?: string;
    /**
     * Fee decimal places
     * @type {number}
     * @memberof MarketInfo
     */
    feeScale?: number;
    /**
     * Unique identifier for the market
     * @type {string}
     * @memberof MarketInfo
     */
    marketId?: string;
    /**
     * Maximum order price
     * @type {string}
     * @memberof MarketInfo
     */
    maxPrice?: string;
    /**
     * Maximum order volume
     * @type {string}
     * @memberof MarketInfo
     */
    maxVolume?: string;
    /**
     * Minimum order price
     * @type {string}
     * @memberof MarketInfo
     */
    minPrice?: string;
    /**
     * Minimum order volume
     * @type {string}
     * @memberof MarketInfo
     */
    minVolume?: string;
    /**
     * Price decimal places
     * @type {number}
     * @memberof MarketInfo
     */
    priceScale?: number;
    /**
     * Current market trading status:<br>
     * <code>POST_ONLY</code> Trading is indefinitely suspended. This state is
     * commonly used when new markets are being launched to give traders enough
     * time to setup their orders before trading begins. When in this status,
     * orders can only be posted as post-only.<br>
     * <code>ACTIVE</code> Trading is fully enabled.<br>
     * <code>SUSPENDED</code> Trading has been temporarily suspended due to very
     * high volatility. When in this status, orders can only be posted as
     * post-only.<br>
     * @type {string}
     * @memberof MarketInfo
     */
    tradingStatus?: MarketInfoTradingStatusEnum;
    /**
     * Volume decimal places
     * @type {number}
     * @memberof MarketInfo
     */
    volumeScale?: number;
}
/**
 * @export
 */
export declare const MarketInfoTradingStatusEnum: {
    readonly PostOnly: "POST_ONLY";
    readonly Active: "ACTIVE";
    readonly Suspended: "SUSPENDED";
};
export type MarketInfoTradingStatusEnum = typeof MarketInfoTradingStatusEnum[keyof typeof MarketInfoTradingStatusEnum];
/**
 * Check if a given object implements the MarketInfo interface.
 */
export declare function instanceOfMarketInfo(value: object): boolean;
export declare function MarketInfoFromJSON(json: any): MarketInfo;
export declare function MarketInfoFromJSONTyped(json: any, ignoreDiscriminator: boolean): MarketInfo;
export declare function MarketInfoToJSON(value?: MarketInfo | null): any;
//# sourceMappingURL=MarketInfo.d.ts.map