"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Luno API
 * The Luno API provides developers with a wealth of financial information provided through the Luno platform.  Through this secure system developers can:  <ul>    <li>Create accounts for trading in cryptocurrencies</li>    <li>Access current and historic cryptocurrency market data</li>    <li>Submit trade orders and view order status</li>    <li>Buy and sell Bitcoin and Ethereum</li>    <li>Send and receive Bitcoin and Ethereum</li>    <li>Generate Bitcoin and Ethereum wallet addresses</li>  </ul>   The Luno API brings the world of Bitcoin and Ethereum to your doorstep.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.SendResponseToJSON = exports.SendResponseFromJSONTyped = exports.SendResponseFromJSON = exports.instanceOfSendResponse = void 0;
const runtime_1 = require("../runtime");
/**
 * Check if a given object implements the SendResponse interface.
 */
function instanceOfSendResponse(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfSendResponse = instanceOfSendResponse;
function SendResponseFromJSON(json) {
    return SendResponseFromJSONTyped(json, false);
}
exports.SendResponseFromJSON = SendResponseFromJSON;
function SendResponseFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'success': !(0, runtime_1.exists)(json, 'success') ? undefined : json['success'],
        'withdrawalId': !(0, runtime_1.exists)(json, 'withdrawal_id') ? undefined : json['withdrawal_id'],
    };
}
exports.SendResponseFromJSONTyped = SendResponseFromJSONTyped;
function SendResponseToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'success': value.success,
        'withdrawal_id': value.withdrawalId,
    };
}
exports.SendResponseToJSON = SendResponseToJSON;
//# sourceMappingURL=SendResponse.js.map