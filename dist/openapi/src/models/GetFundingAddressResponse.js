"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Luno API
 * The Luno API provides developers with a wealth of financial information provided through the Luno platform.  Through this secure system developers can:  <ul>    <li>Create accounts for trading in cryptocurrencies</li>    <li>Access current and historic cryptocurrency market data</li>    <li>Submit trade orders and view order status</li>    <li>Buy and sell Bitcoin and Ethereum</li>    <li>Send and receive Bitcoin and Ethereum</li>    <li>Generate Bitcoin and Ethereum wallet addresses</li>  </ul>   The Luno API brings the world of Bitcoin and Ethereum to your doorstep.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.GetFundingAddressResponseToJSON = exports.GetFundingAddressResponseFromJSONTyped = exports.GetFundingAddressResponseFromJSON = exports.instanceOfGetFundingAddressResponse = void 0;
const runtime_1 = require("../runtime");
const AddressMeta_1 = require("./AddressMeta");
/**
 * Check if a given object implements the GetFundingAddressResponse interface.
 */
function instanceOfGetFundingAddressResponse(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfGetFundingAddressResponse = instanceOfGetFundingAddressResponse;
function GetFundingAddressResponseFromJSON(json) {
    return GetFundingAddressResponseFromJSONTyped(json, false);
}
exports.GetFundingAddressResponseFromJSON = GetFundingAddressResponseFromJSON;
function GetFundingAddressResponseFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'accountId': !(0, runtime_1.exists)(json, 'account_id') ? undefined : json['account_id'],
        'address': !(0, runtime_1.exists)(json, 'address') ? undefined : json['address'],
        'addressMeta': !(0, runtime_1.exists)(json, 'address_meta') ? undefined : (json['address_meta'].map(AddressMeta_1.AddressMetaFromJSON)),
        'asset': !(0, runtime_1.exists)(json, 'asset') ? undefined : json['asset'],
        'assignedAt': !(0, runtime_1.exists)(json, 'assigned_at') ? undefined : json['assigned_at'],
        'name': !(0, runtime_1.exists)(json, 'name') ? undefined : json['name'],
        'qrCodeUri': !(0, runtime_1.exists)(json, 'qr_code_uri') ? undefined : json['qr_code_uri'],
        'receiveFee': !(0, runtime_1.exists)(json, 'receive_fee') ? undefined : json['receive_fee'],
        'totalReceived': !(0, runtime_1.exists)(json, 'total_received') ? undefined : json['total_received'],
        'totalUnconfirmed': !(0, runtime_1.exists)(json, 'total_unconfirmed') ? undefined : json['total_unconfirmed'],
    };
}
exports.GetFundingAddressResponseFromJSONTyped = GetFundingAddressResponseFromJSONTyped;
function GetFundingAddressResponseToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'account_id': value.accountId,
        'address': value.address,
        'address_meta': value.addressMeta === undefined ? undefined : (value.addressMeta.map(AddressMeta_1.AddressMetaToJSON)),
        'asset': value.asset,
        'assigned_at': value.assignedAt,
        'name': value.name,
        'qr_code_uri': value.qrCodeUri,
        'receive_fee': value.receiveFee,
        'total_received': value.totalReceived,
        'total_unconfirmed': value.totalUnconfirmed,
    };
}
exports.GetFundingAddressResponseToJSON = GetFundingAddressResponseToJSON;
//# sourceMappingURL=GetFundingAddressResponse.js.map