/**
 * Luno API
 * The Luno API provides developers with a wealth of financial information provided through the Luno platform.  Through this secure system developers can:  <ul>    <li>Create accounts for trading in cryptocurrencies</li>    <li>Access current and historic cryptocurrency market data</li>    <li>Submit trade orders and view order status</li>    <li>Buy and sell Bitcoin and Ethereum</li>    <li>Send and receive Bitcoin and Ethereum</li>    <li>Generate Bitcoin and Ethereum wallet addresses</li>  </ul>   The Luno API brings the world of Bitcoin and Ethereum to your doorstep.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import type { CreateFundingAddressResponse, GetFundingAddressResponse } from '../models';
export interface CreateFundingAddressRequest {
    asset: string;
    name?: string;
}
export interface GetFundingAddressRequest {
    asset: string;
    address?: string;
}
/**
 * ReceiveApi - interface
 *
 * @export
 * @interface ReceiveApiInterface
 */
export interface ReceiveApiInterface {
    /**
     * Allocates a new receive address to your account. There is a rate limit of 1 address per hour, but bursts of up to 10 addresses are allowed. Only 1 Ethereum receive address can be created.  Permissions required: <code>Perm_W_Addresses</code>
     * @summary # Create receive address
     * @param {string} asset Currency code of the asset.
     * @param {string} [name] An optional name for the new Receive Address
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ReceiveApiInterface
     */
    createFundingAddressRaw(requestParameters: CreateFundingAddressRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<CreateFundingAddressResponse>>;
    /**
     * Allocates a new receive address to your account. There is a rate limit of 1 address per hour, but bursts of up to 10 addresses are allowed. Only 1 Ethereum receive address can be created.  Permissions required: <code>Perm_W_Addresses</code>
     * # Create receive address
     */
    createFundingAddress(requestParameters: CreateFundingAddressRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CreateFundingAddressResponse>;
    /**
     * Returns the default receive address associated with your account and the amount received via the address. Users can specify an optional address parameter to return information for a non-default receive address. In the response, <code>total_received</code> is the total confirmed amount received excluding unconfirmed transactions. <code>total_unconfirmed</code> is the total sum of unconfirmed receive transactions.  Permissions required: <code>Perm_R_Addresses</code>
     * @summary # Get receive address
     * @param {string} asset Currency code of the asset.
     * @param {string} [address] Specific cryptocurrency address to retrieve. If not provided, the default address will be used.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ReceiveApiInterface
     */
    getFundingAddressRaw(requestParameters: GetFundingAddressRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GetFundingAddressResponse>>;
    /**
     * Returns the default receive address associated with your account and the amount received via the address. Users can specify an optional address parameter to return information for a non-default receive address. In the response, <code>total_received</code> is the total confirmed amount received excluding unconfirmed transactions. <code>total_unconfirmed</code> is the total sum of unconfirmed receive transactions.  Permissions required: <code>Perm_R_Addresses</code>
     * # Get receive address
     */
    getFundingAddress(requestParameters: GetFundingAddressRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GetFundingAddressResponse>;
}
/**
 *
 */
export declare class ReceiveApi extends runtime.BaseAPI implements ReceiveApiInterface {
    /**
     * Allocates a new receive address to your account. There is a rate limit of 1 address per hour, but bursts of up to 10 addresses are allowed. Only 1 Ethereum receive address can be created.  Permissions required: <code>Perm_W_Addresses</code>
     * # Create receive address
     */
    createFundingAddressRaw(requestParameters: CreateFundingAddressRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<CreateFundingAddressResponse>>;
    /**
     * Allocates a new receive address to your account. There is a rate limit of 1 address per hour, but bursts of up to 10 addresses are allowed. Only 1 Ethereum receive address can be created.  Permissions required: <code>Perm_W_Addresses</code>
     * # Create receive address
     */
    createFundingAddress(requestParameters: CreateFundingAddressRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CreateFundingAddressResponse>;
    /**
     * Returns the default receive address associated with your account and the amount received via the address. Users can specify an optional address parameter to return information for a non-default receive address. In the response, <code>total_received</code> is the total confirmed amount received excluding unconfirmed transactions. <code>total_unconfirmed</code> is the total sum of unconfirmed receive transactions.  Permissions required: <code>Perm_R_Addresses</code>
     * # Get receive address
     */
    getFundingAddressRaw(requestParameters: GetFundingAddressRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GetFundingAddressResponse>>;
    /**
     * Returns the default receive address associated with your account and the amount received via the address. Users can specify an optional address parameter to return information for a non-default receive address. In the response, <code>total_received</code> is the total confirmed amount received excluding unconfirmed transactions. <code>total_unconfirmed</code> is the total sum of unconfirmed receive transactions.  Permissions required: <code>Perm_R_Addresses</code>
     * # Get receive address
     */
    getFundingAddress(requestParameters: GetFundingAddressRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GetFundingAddressResponse>;
}
//# sourceMappingURL=ReceiveApi.d.ts.map