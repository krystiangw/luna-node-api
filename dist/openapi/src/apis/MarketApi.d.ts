/**
 * Luno API
 * The Luno API provides developers with a wealth of financial information provided through the Luno platform.  Through this secure system developers can:  <ul>    <li>Create accounts for trading in cryptocurrencies</li>    <li>Access current and historic cryptocurrency market data</li>    <li>Submit trade orders and view order status</li>    <li>Buy and sell Bitcoin and Ethereum</li>    <li>Send and receive Bitcoin and Ethereum</li>    <li>Generate Bitcoin and Ethereum wallet addresses</li>  </ul>   The Luno API brings the world of Bitcoin and Ethereum to your doorstep.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import type { GetCandlesResponse, GetOrderBookResponse, GetTickerResponse, ListTickersResponse, ListTradesResponse, MarketsInfoResponse } from '../models';
export interface GetCandlesRequest {
    pair: string;
    since: string;
    duration: number;
}
export interface GetOrderBookRequest {
    pair: string;
}
export interface GetOrderBookFullRequest {
    pair: string;
}
export interface GetTickerRequest {
    pair: string;
}
export interface GetTickersRequest {
    pair?: Array<string>;
}
export interface ListTradesRequest {
    pair: string;
    since?: string;
}
export interface MarketsRequest {
    pair?: Array<string>;
}
/**
 * MarketApi - interface
 *
 * @export
 * @interface MarketApiInterface
 */
export interface MarketApiInterface {
    /**
     * Get candlestick market data from the specified time until now, from the oldest to the most recent.  Permissions required: <code>MP_None</code>
     * @summary Get candles
     * @param {string} pair Currency pair
     * @param {string} since Filter to candles starting on or after this timestamp (Unix milliseconds). Only up to 1000 of the earliest candles are returned.
     * @param {number} duration Candle duration in seconds. For example, 300 corresponds to 5m candles. Currently supported durations are: 60 (1m), 300 (5m), 900 (15m), 1800 (30m), 3600 (1h), 10800 (3h), 14400 (4h), 28800 (8h), 86400 (24h), 259200 (3d), 604800 (7d).
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof MarketApiInterface
     */
    getCandlesRaw(requestParameters: GetCandlesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GetCandlesResponse>>;
    /**
     * Get candlestick market data from the specified time until now, from the oldest to the most recent.  Permissions required: <code>MP_None</code>
     * Get candles
     */
    getCandles(requestParameters: GetCandlesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GetCandlesResponse>;
    /**
     * This request returns the best 100 `bids` and `asks`, for the currency pair specified, in the Order Book.  `asks` are sorted by price ascending and `bids` are sorted by price descending.  Multiple orders at the same price are aggregated.
     * @summary Get top order book
     * @param {string} pair Currency pair of the Orders to retrieve
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof MarketApiInterface
     */
    getOrderBookRaw(requestParameters: GetOrderBookRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GetOrderBookResponse>>;
    /**
     * This request returns the best 100 `bids` and `asks`, for the currency pair specified, in the Order Book.  `asks` are sorted by price ascending and `bids` are sorted by price descending.  Multiple orders at the same price are aggregated.
     * Get top order book
     */
    getOrderBook(requestParameters: GetOrderBookRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GetOrderBookResponse>;
    /**
     * This request returns all `bids` and `asks`, for the currency pair specified, in the Order Book.  `asks` are sorted by price ascending and `bids` are sorted by price descending.  Multiple orders at the same price are not aggregated.  <b>WARNING:</b> This may return a large amount of data. Users are recommended to use the <a href=\"#operation/getOrderBookTop\">top 100 bids and asks</a> or the <a href=\"#tag/Streaming-API\">Streaming API</a>.
     * @summary Get full order book
     * @param {string} pair Currency pair of the Orders to retrieve
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof MarketApiInterface
     */
    getOrderBookFullRaw(requestParameters: GetOrderBookFullRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GetOrderBookResponse>>;
    /**
     * This request returns all `bids` and `asks`, for the currency pair specified, in the Order Book.  `asks` are sorted by price ascending and `bids` are sorted by price descending.  Multiple orders at the same price are not aggregated.  <b>WARNING:</b> This may return a large amount of data. Users are recommended to use the <a href=\"#operation/getOrderBookTop\">top 100 bids and asks</a> or the <a href=\"#tag/Streaming-API\">Streaming API</a>.
     * Get full order book
     */
    getOrderBookFull(requestParameters: GetOrderBookFullRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GetOrderBookResponse>;
    /**
     * Returns the latest ticker indicators for the specified currency pair.  Please see the <a href=\"#tag/currency \">Currency list</a> for the complete list of supported currency pairs.
     * @summary Get ticker for currency pair
     * @param {string} pair Currency pair
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof MarketApiInterface
     */
    getTickerRaw(requestParameters: GetTickerRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GetTickerResponse>>;
    /**
     * Returns the latest ticker indicators for the specified currency pair.  Please see the <a href=\"#tag/currency \">Currency list</a> for the complete list of supported currency pairs.
     * Get ticker for currency pair
     */
    getTicker(requestParameters: GetTickerRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GetTickerResponse>;
    /**
     * Returns the latest ticker indicators from all active Luno exchanges.  Please see the <a href=\"#tag/currency \">Currency list</a> for the complete list of supported currency pairs.
     * @summary List tickers for all currency pairs
     * @param {Array<string>} [pair] Return tickers for multiple markets (if not provided, all tickers will be returned). To request tickers for multiple markets, pass the parameter multiple times, e.g. &#x60;pair&#x3D;XBTZAR&amp;pair&#x3D;ETHZAR&#x60;.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof MarketApiInterface
     */
    getTickersRaw(requestParameters: GetTickersRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ListTickersResponse>>;
    /**
     * Returns the latest ticker indicators from all active Luno exchanges.  Please see the <a href=\"#tag/currency \">Currency list</a> for the complete list of supported currency pairs.
     * List tickers for all currency pairs
     */
    getTickers(requestParameters: GetTickersRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ListTickersResponse>;
    /**
     * Returns a list of recent trades for the specified currency pair. At most 100 trades are returned per call and never trades older than 24h. The trades are sorted from newest to oldest.  Please see the <a href=\"#tag/currency \">Currency list</a> for the complete list of supported currency pairs.
     * @summary List recent trades
     * @param {string} pair Currency pair of the market to list the trades from
     * @param {string} [since] Fetch trades executed after this time, specified as a Unix timestamp in milliseconds. An error will be returned if this is before 24h ago. Use this parameter to either restrict to a shorter window or to iterate over the trades in case you need more than the 100 most recent trades.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof MarketApiInterface
     */
    listTradesRaw(requestParameters: ListTradesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ListTradesResponse>>;
    /**
     * Returns a list of recent trades for the specified currency pair. At most 100 trades are returned per call and never trades older than 24h. The trades are sorted from newest to oldest.  Please see the <a href=\"#tag/currency \">Currency list</a> for the complete list of supported currency pairs.
     * List recent trades
     */
    listTrades(requestParameters: ListTradesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ListTradesResponse>;
    /**
     * List all supported markets parameter information like price scale, min and max order volumes and market ID.
     * @summary Get markets info
     * @param {Array<string>} [pair] List of market pairs to return. Requesting only the required pairs will improve response times.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof MarketApiInterface
     */
    marketsRaw(requestParameters: MarketsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<MarketsInfoResponse>>;
    /**
     * List all supported markets parameter information like price scale, min and max order volumes and market ID.
     * Get markets info
     */
    markets(requestParameters: MarketsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<MarketsInfoResponse>;
}
/**
 *
 */
export declare class MarketApi extends runtime.BaseAPI implements MarketApiInterface {
    /**
     * Get candlestick market data from the specified time until now, from the oldest to the most recent.  Permissions required: <code>MP_None</code>
     * Get candles
     */
    getCandlesRaw(requestParameters: GetCandlesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GetCandlesResponse>>;
    /**
     * Get candlestick market data from the specified time until now, from the oldest to the most recent.  Permissions required: <code>MP_None</code>
     * Get candles
     */
    getCandles(requestParameters: GetCandlesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GetCandlesResponse>;
    /**
     * This request returns the best 100 `bids` and `asks`, for the currency pair specified, in the Order Book.  `asks` are sorted by price ascending and `bids` are sorted by price descending.  Multiple orders at the same price are aggregated.
     * Get top order book
     */
    getOrderBookRaw(requestParameters: GetOrderBookRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GetOrderBookResponse>>;
    /**
     * This request returns the best 100 `bids` and `asks`, for the currency pair specified, in the Order Book.  `asks` are sorted by price ascending and `bids` are sorted by price descending.  Multiple orders at the same price are aggregated.
     * Get top order book
     */
    getOrderBook(requestParameters: GetOrderBookRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GetOrderBookResponse>;
    /**
     * This request returns all `bids` and `asks`, for the currency pair specified, in the Order Book.  `asks` are sorted by price ascending and `bids` are sorted by price descending.  Multiple orders at the same price are not aggregated.  <b>WARNING:</b> This may return a large amount of data. Users are recommended to use the <a href=\"#operation/getOrderBookTop\">top 100 bids and asks</a> or the <a href=\"#tag/Streaming-API\">Streaming API</a>.
     * Get full order book
     */
    getOrderBookFullRaw(requestParameters: GetOrderBookFullRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GetOrderBookResponse>>;
    /**
     * This request returns all `bids` and `asks`, for the currency pair specified, in the Order Book.  `asks` are sorted by price ascending and `bids` are sorted by price descending.  Multiple orders at the same price are not aggregated.  <b>WARNING:</b> This may return a large amount of data. Users are recommended to use the <a href=\"#operation/getOrderBookTop\">top 100 bids and asks</a> or the <a href=\"#tag/Streaming-API\">Streaming API</a>.
     * Get full order book
     */
    getOrderBookFull(requestParameters: GetOrderBookFullRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GetOrderBookResponse>;
    /**
     * Returns the latest ticker indicators for the specified currency pair.  Please see the <a href=\"#tag/currency \">Currency list</a> for the complete list of supported currency pairs.
     * Get ticker for currency pair
     */
    getTickerRaw(requestParameters: GetTickerRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GetTickerResponse>>;
    /**
     * Returns the latest ticker indicators for the specified currency pair.  Please see the <a href=\"#tag/currency \">Currency list</a> for the complete list of supported currency pairs.
     * Get ticker for currency pair
     */
    getTicker(requestParameters: GetTickerRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GetTickerResponse>;
    /**
     * Returns the latest ticker indicators from all active Luno exchanges.  Please see the <a href=\"#tag/currency \">Currency list</a> for the complete list of supported currency pairs.
     * List tickers for all currency pairs
     */
    getTickersRaw(requestParameters: GetTickersRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ListTickersResponse>>;
    /**
     * Returns the latest ticker indicators from all active Luno exchanges.  Please see the <a href=\"#tag/currency \">Currency list</a> for the complete list of supported currency pairs.
     * List tickers for all currency pairs
     */
    getTickers(requestParameters?: GetTickersRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ListTickersResponse>;
    /**
     * Returns a list of recent trades for the specified currency pair. At most 100 trades are returned per call and never trades older than 24h. The trades are sorted from newest to oldest.  Please see the <a href=\"#tag/currency \">Currency list</a> for the complete list of supported currency pairs.
     * List recent trades
     */
    listTradesRaw(requestParameters: ListTradesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ListTradesResponse>>;
    /**
     * Returns a list of recent trades for the specified currency pair. At most 100 trades are returned per call and never trades older than 24h. The trades are sorted from newest to oldest.  Please see the <a href=\"#tag/currency \">Currency list</a> for the complete list of supported currency pairs.
     * List recent trades
     */
    listTrades(requestParameters: ListTradesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ListTradesResponse>;
    /**
     * List all supported markets parameter information like price scale, min and max order volumes and market ID.
     * Get markets info
     */
    marketsRaw(requestParameters: MarketsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<MarketsInfoResponse>>;
    /**
     * List all supported markets parameter information like price scale, min and max order volumes and market ID.
     * Get markets info
     */
    markets(requestParameters?: MarketsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<MarketsInfoResponse>;
}
//# sourceMappingURL=MarketApi.d.ts.map