/* tslint:disable */
/* eslint-disable */
/**
 * Luno API
 * The Luno API provides developers with a wealth of financial information provided through the Luno platform.  Through this secure system developers can:  <ul>    <li>Create accounts for trading in cryptocurrencies</li>    <li>Access current and historic cryptocurrency market data</li>    <li>Submit trade orders and view order status</li>    <li>Buy and sell Bitcoin and Ethereum</li>    <li>Send and receive Bitcoin and Ethereum</li>    <li>Generate Bitcoin and Ethereum wallet addresses</li>  </ul>   The Luno API brings the world of Bitcoin and Ethereum to your doorstep. 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * OrderBookEntry is the representation of one or more order resting in the
 * order book.
 * @export
 * @interface OrderBookEntry
 */
export interface OrderBookEntry {
    /**
     * Limit price at which orders are trading at
     * @type {string}
     * @memberof OrderBookEntry
     */
    price?: string;
    /**
     * The volume available at the limit price
     * @type {string}
     * @memberof OrderBookEntry
     */
    volume?: string;
}

/**
 * Check if a given object implements the OrderBookEntry interface.
 */
export function instanceOfOrderBookEntry(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function OrderBookEntryFromJSON(json: any): OrderBookEntry {
    return OrderBookEntryFromJSONTyped(json, false);
}

export function OrderBookEntryFromJSONTyped(json: any, ignoreDiscriminator: boolean): OrderBookEntry {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'price': !exists(json, 'price') ? undefined : json['price'],
        'volume': !exists(json, 'volume') ? undefined : json['volume'],
    };
}

export function OrderBookEntryToJSON(value?: OrderBookEntry | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'price': value.price,
        'volume': value.volume,
    };
}

