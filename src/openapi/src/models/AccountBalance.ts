/* tslint:disable */
/* eslint-disable */
/**
 * Luno API
 * The Luno API provides developers with a wealth of financial information provided through the Luno platform.  Through this secure system developers can:  <ul>    <li>Create accounts for trading in cryptocurrencies</li>    <li>Access current and historic cryptocurrency market data</li>    <li>Submit trade orders and view order status</li>    <li>Buy and sell Bitcoin and Ethereum</li>    <li>Send and receive Bitcoin and Ethereum</li>    <li>Generate Bitcoin and Ethereum wallet addresses</li>  </ul>   The Luno API brings the world of Bitcoin and Ethereum to your doorstep. 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface AccountBalance
 */
export interface AccountBalance {
    /**
     * ID of the account.
     * @type {string}
     * @memberof AccountBalance
     */
    accountId?: string;
    /**
     * Currency code for the asset held in this account.
     * @type {string}
     * @memberof AccountBalance
     */
    asset?: string;
    /**
     * The amount available to send or trade.
     * @type {string}
     * @memberof AccountBalance
     */
    balance?: string;
    /**
     * The name set by the user upon creating the account.
     * @type {string}
     * @memberof AccountBalance
     */
    name?: string;
    /**
     * Amount locked by Luno and cannot be sent or traded. This could be due to
     * open orders.
     * @type {string}
     * @memberof AccountBalance
     */
    reserved?: string;
    /**
     * Amount that is awaiting some sort of verification to be credited to this
     * account. This could be an on-chain transaction that Luno is waiting for
     * further block verifications to happen.
     * @type {string}
     * @memberof AccountBalance
     */
    unconfirmed?: string;
}

/**
 * Check if a given object implements the AccountBalance interface.
 */
export function instanceOfAccountBalance(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function AccountBalanceFromJSON(json: any): AccountBalance {
    return AccountBalanceFromJSONTyped(json, false);
}

export function AccountBalanceFromJSONTyped(json: any, ignoreDiscriminator: boolean): AccountBalance {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'accountId': !exists(json, 'account_id') ? undefined : json['account_id'],
        'asset': !exists(json, 'asset') ? undefined : json['asset'],
        'balance': !exists(json, 'balance') ? undefined : json['balance'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'reserved': !exists(json, 'reserved') ? undefined : json['reserved'],
        'unconfirmed': !exists(json, 'unconfirmed') ? undefined : json['unconfirmed'],
    };
}

export function AccountBalanceToJSON(value?: AccountBalance | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'account_id': value.accountId,
        'asset': value.asset,
        'balance': value.balance,
        'name': value.name,
        'reserved': value.reserved,
        'unconfirmed': value.unconfirmed,
    };
}

