/* tslint:disable */
/* eslint-disable */
/**
 * Luno API
 * The Luno API provides developers with a wealth of financial information provided through the Luno platform.  Through this secure system developers can:  <ul>    <li>Create accounts for trading in cryptocurrencies</li>    <li>Access current and historic cryptocurrency market data</li>    <li>Submit trade orders and view order status</li>    <li>Buy and sell Bitcoin and Ethereum</li>    <li>Send and receive Bitcoin and Ethereum</li>    <li>Generate Bitcoin and Ethereum wallet addresses</li>  </ul>   The Luno API brings the world of Bitcoin and Ethereum to your doorstep. 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Candle
 */
export interface Candle {
    /**
     * Closing price
     * @type {string}
     * @memberof Candle
     */
    close?: string;
    /**
     * High price
     * @type {string}
     * @memberof Candle
     */
    high?: string;
    /**
     * Low price
     * @type {string}
     * @memberof Candle
     */
    low?: string;
    /**
     * Opening price
     * @type {string}
     * @memberof Candle
     */
    open?: string;
    /**
     * Unix timestamp in milliseconds
     * @type {string}
     * @memberof Candle
     */
    timestamp?: string;
    /**
     * Volume traded
     * @type {string}
     * @memberof Candle
     */
    volume?: string;
}

/**
 * Check if a given object implements the Candle interface.
 */
export function instanceOfCandle(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function CandleFromJSON(json: any): Candle {
    return CandleFromJSONTyped(json, false);
}

export function CandleFromJSONTyped(json: any, ignoreDiscriminator: boolean): Candle {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'close': !exists(json, 'close') ? undefined : json['close'],
        'high': !exists(json, 'high') ? undefined : json['high'],
        'low': !exists(json, 'low') ? undefined : json['low'],
        'open': !exists(json, 'open') ? undefined : json['open'],
        'timestamp': !exists(json, 'timestamp') ? undefined : json['timestamp'],
        'volume': !exists(json, 'volume') ? undefined : json['volume'],
    };
}

export function CandleToJSON(value?: Candle | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'close': value.close,
        'high': value.high,
        'low': value.low,
        'open': value.open,
        'timestamp': value.timestamp,
        'volume': value.volume,
    };
}

