/* tslint:disable */
/* eslint-disable */
/**
 * Luno API
 * The Luno API provides developers with a wealth of financial information provided through the Luno platform.  Through this secure system developers can:  <ul>    <li>Create accounts for trading in cryptocurrencies</li>    <li>Access current and historic cryptocurrency market data</li>    <li>Submit trade orders and view order status</li>    <li>Buy and sell Bitcoin and Ethereum</li>    <li>Send and receive Bitcoin and Ethereum</li>    <li>Generate Bitcoin and Ethereum wallet addresses</li>  </ul>   The Luno API brings the world of Bitcoin and Ethereum to your doorstep. 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * GetTickerResponse response for /api/ticker
 * @export
 * @interface GetTickerResponse
 */
export interface GetTickerResponse {
    /**
     * The lowest ask price
     * @type {string}
     * @memberof GetTickerResponse
     */
    ask?: string;
    /**
     * The highest bid price
     * @type {string}
     * @memberof GetTickerResponse
     */
    bid?: string;
    /**
     * Last trade price
     * @type {string}
     * @memberof GetTickerResponse
     */
    lastTrade?: string;
    /**
     * 
     * @type {string}
     * @memberof GetTickerResponse
     */
    pair?: string;
    /**
     * 24h rolling trade volume
     * @type {string}
     * @memberof GetTickerResponse
     */
    rolling24HourVolume?: string;
    /**
     * Market current status
     * 
     * <code>ACTIVE</code> when the market is trading normally
     * 
     * <code>POSTONLY</code> when the market has been suspended and only post-only orders will be accepted
     * 
     * <code>DISABLED</code> when the market is shutdown and no orders can be accepted
     * @type {string}
     * @memberof GetTickerResponse
     */
    status?: GetTickerResponseStatusEnum;
    /**
     * Unix timestamp in milliseconds of the tick
     * @type {string}
     * @memberof GetTickerResponse
     */
    timestamp?: string;
}


/**
 * @export
 */
export const GetTickerResponseStatusEnum = {
    Active: 'ACTIVE',
    Postonly: 'POSTONLY',
    Disabled: 'DISABLED'
} as const;
export type GetTickerResponseStatusEnum = typeof GetTickerResponseStatusEnum[keyof typeof GetTickerResponseStatusEnum];


/**
 * Check if a given object implements the GetTickerResponse interface.
 */
export function instanceOfGetTickerResponse(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function GetTickerResponseFromJSON(json: any): GetTickerResponse {
    return GetTickerResponseFromJSONTyped(json, false);
}

export function GetTickerResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): GetTickerResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'ask': !exists(json, 'ask') ? undefined : json['ask'],
        'bid': !exists(json, 'bid') ? undefined : json['bid'],
        'lastTrade': !exists(json, 'last_trade') ? undefined : json['last_trade'],
        'pair': !exists(json, 'pair') ? undefined : json['pair'],
        'rolling24HourVolume': !exists(json, 'rolling_24_hour_volume') ? undefined : json['rolling_24_hour_volume'],
        'status': !exists(json, 'status') ? undefined : json['status'],
        'timestamp': !exists(json, 'timestamp') ? undefined : json['timestamp'],
    };
}

export function GetTickerResponseToJSON(value?: GetTickerResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'ask': value.ask,
        'bid': value.bid,
        'last_trade': value.lastTrade,
        'pair': value.pair,
        'rolling_24_hour_volume': value.rolling24HourVolume,
        'status': value.status,
        'timestamp': value.timestamp,
    };
}

