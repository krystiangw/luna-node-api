/* tslint:disable */
/* eslint-disable */
/**
 * Luno API
 * The Luno API provides developers with a wealth of financial information provided through the Luno platform.  Through this secure system developers can:  <ul>    <li>Create accounts for trading in cryptocurrencies</li>    <li>Access current and historic cryptocurrency market data</li>    <li>Submit trade orders and view order status</li>    <li>Buy and sell Bitcoin and Ethereum</li>    <li>Send and receive Bitcoin and Ethereum</li>    <li>Generate Bitcoin and Ethereum wallet addresses</li>  </ul>   The Luno API brings the world of Bitcoin and Ethereum to your doorstep. 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { MarketInfo } from './MarketInfo';
import {
    MarketInfoFromJSON,
    MarketInfoFromJSONTyped,
    MarketInfoToJSON,
} from './MarketInfo';

/**
 * MarketsInfoResponse response for /api/2/markets
 * @export
 * @interface MarketsInfoResponse
 */
export interface MarketsInfoResponse {
    /**
     * 
     * @type {Array<MarketInfo>}
     * @memberof MarketsInfoResponse
     */
    markets?: Array<MarketInfo>;
}

/**
 * Check if a given object implements the MarketsInfoResponse interface.
 */
export function instanceOfMarketsInfoResponse(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function MarketsInfoResponseFromJSON(json: any): MarketsInfoResponse {
    return MarketsInfoResponseFromJSONTyped(json, false);
}

export function MarketsInfoResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): MarketsInfoResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'markets': !exists(json, 'markets') ? undefined : ((json['markets'] as Array<any>).map(MarketInfoFromJSON)),
    };
}

export function MarketsInfoResponseToJSON(value?: MarketsInfoResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'markets': value.markets === undefined ? undefined : ((value.markets as Array<any>).map(MarketInfoToJSON)),
    };
}

