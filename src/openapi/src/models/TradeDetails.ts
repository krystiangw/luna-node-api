/* tslint:disable */
/* eslint-disable */
/**
 * Luno API
 * The Luno API provides developers with a wealth of financial information provided through the Luno platform.  Through this secure system developers can:  <ul>    <li>Create accounts for trading in cryptocurrencies</li>    <li>Access current and historic cryptocurrency market data</li>    <li>Submit trade orders and view order status</li>    <li>Buy and sell Bitcoin and Ethereum</li>    <li>Send and receive Bitcoin and Ethereum</li>    <li>Generate Bitcoin and Ethereum wallet addresses</li>  </ul>   The Luno API brings the world of Bitcoin and Ethereum to your doorstep. 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * TradeDetails contains a transaction volume, price and pair
 * @export
 * @interface TradeDetails
 */
export interface TradeDetails {
    /**
     * Pair of the market
     * @type {string}
     * @memberof TradeDetails
     */
    pair?: string;
    /**
     * Price at which the volume traded for
     * @type {string}
     * @memberof TradeDetails
     */
    price?: string;
    /**
     * Sequence identifies the trade within a market
     * @type {number}
     * @memberof TradeDetails
     */
    sequence?: number;
    /**
     * Volume is the amount of base traded
     * @type {string}
     * @memberof TradeDetails
     */
    volume?: string;
}

/**
 * Check if a given object implements the TradeDetails interface.
 */
export function instanceOfTradeDetails(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function TradeDetailsFromJSON(json: any): TradeDetails {
    return TradeDetailsFromJSONTyped(json, false);
}

export function TradeDetailsFromJSONTyped(json: any, ignoreDiscriminator: boolean): TradeDetails {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'pair': !exists(json, 'pair') ? undefined : json['pair'],
        'price': !exists(json, 'price') ? undefined : json['price'],
        'sequence': !exists(json, 'sequence') ? undefined : json['sequence'],
        'volume': !exists(json, 'volume') ? undefined : json['volume'],
    };
}

export function TradeDetailsToJSON(value?: TradeDetails | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'pair': value.pair,
        'price': value.price,
        'sequence': value.sequence,
        'volume': value.volume,
    };
}

