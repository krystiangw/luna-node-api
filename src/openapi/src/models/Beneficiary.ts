/* tslint:disable */
/* eslint-disable */
/**
 * Luno API
 * The Luno API provides developers with a wealth of financial information provided through the Luno platform.  Through this secure system developers can:  <ul>    <li>Create accounts for trading in cryptocurrencies</li>    <li>Access current and historic cryptocurrency market data</li>    <li>Submit trade orders and view order status</li>    <li>Buy and sell Bitcoin and Ethereum</li>    <li>Send and receive Bitcoin and Ethereum</li>    <li>Generate Bitcoin and Ethereum wallet addresses</li>  </ul>   The Luno API brings the world of Bitcoin and Ethereum to your doorstep. 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Beneficiary
 */
export interface Beneficiary {
    /**
     * 
     * @type {string}
     * @memberof Beneficiary
     */
    bankAccountBranch?: string;
    /**
     * 
     * @type {string}
     * @memberof Beneficiary
     */
    bankAccountNumber?: string;
    /**
     * 
     * @type {string}
     * @memberof Beneficiary
     */
    bankAccountType?: string;
    /**
     * 
     * @type {string}
     * @memberof Beneficiary
     */
    bankCountry?: string;
    /**
     * 
     * @type {string}
     * @memberof Beneficiary
     */
    bankName?: string;
    /**
     * 
     * @type {string}
     * @memberof Beneficiary
     */
    bankRecipient?: string;
    /**
     * 
     * @type {number}
     * @memberof Beneficiary
     */
    createdAt?: number;
    /**
     * 
     * @type {string}
     * @memberof Beneficiary
     */
    id?: string;
    /**
     * 
     * @type {boolean}
     * @memberof Beneficiary
     */
    supportsFastWithdrawals?: boolean;
}

/**
 * Check if a given object implements the Beneficiary interface.
 */
export function instanceOfBeneficiary(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function BeneficiaryFromJSON(json: any): Beneficiary {
    return BeneficiaryFromJSONTyped(json, false);
}

export function BeneficiaryFromJSONTyped(json: any, ignoreDiscriminator: boolean): Beneficiary {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'bankAccountBranch': !exists(json, 'bank_account_branch') ? undefined : json['bank_account_branch'],
        'bankAccountNumber': !exists(json, 'bank_account_number') ? undefined : json['bank_account_number'],
        'bankAccountType': !exists(json, 'bank_account_type') ? undefined : json['bank_account_type'],
        'bankCountry': !exists(json, 'bank_country') ? undefined : json['bank_country'],
        'bankName': !exists(json, 'bank_name') ? undefined : json['bank_name'],
        'bankRecipient': !exists(json, 'bank_recipient') ? undefined : json['bank_recipient'],
        'createdAt': !exists(json, 'created_at') ? undefined : json['created_at'],
        'id': !exists(json, 'id') ? undefined : json['id'],
        'supportsFastWithdrawals': !exists(json, 'supports_fast_withdrawals') ? undefined : json['supports_fast_withdrawals'],
    };
}

export function BeneficiaryToJSON(value?: Beneficiary | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'bank_account_branch': value.bankAccountBranch,
        'bank_account_number': value.bankAccountNumber,
        'bank_account_type': value.bankAccountType,
        'bank_country': value.bankCountry,
        'bank_name': value.bankName,
        'bank_recipient': value.bankRecipient,
        'created_at': value.createdAt,
        'id': value.id,
        'supports_fast_withdrawals': value.supportsFastWithdrawals,
    };
}

